// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should display message when no results found 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}
>
  <View>
    <View
      hasTabs={true}
      rounded={true}
      searchBar={true}
      style={
        Object {
          "backgroundColor": "#F8F8F8",
          "borderBottomColor": "#a7a6ab",
          "borderBottomWidth": null,
          "elevation": 0,
          "flexDirection": "row",
          "height": 64,
          "justifyContent": "center",
          "left": 0,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 15,
          "right": 0,
          "shadowColor": null,
          "shadowOffset": null,
          "shadowOpacity": null,
          "shadowRadius": null,
          "top": 0,
        }
      }
      virtual={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#CECDD2",
            "borderBottomWidth": 1,
            "borderColor": "transparent",
            "borderLeftWidth": 0,
            "borderRadius": 25,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "flex": 1,
            "flexDirection": "row",
            "height": 30,
            "justifyContent": "flex-start",
            "marginLeft": 2,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          autoCorrect={false}
          clearButtonMode="while-editing"
          editable={true}
          onChangeText={[Function]}
          onEndEditing={[Function]}
          placeholder="Search"
          placeholderTextColor="#575757"
          style={
            Object {
              "alignSelf": "center",
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 30,
              "lineHeight": 24,
              "paddingLeft": 5,
              "paddingRight": 5,
              "top": 1.5,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "flex-start",
                "backgroundColor": "transparent",
                "borderBottomWidth": null,
                "borderColor": "#007aff",
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "elevation": 0,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingBottom": 6,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
          <Modal
            animationType="slide"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            supportedOrientations={null}
            transparent={false}
            visible={false}
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "height": 1334,
                }
              }
              virtual={undefined}
            >
              <View>
                <View
                  style={
                    Object {
                      "backgroundColor": "#F8F8F8",
                      "borderBottomColor": "#a7a6ab",
                      "borderBottomWidth": 0.5,
                      "elevation": 3,
                      "flexDirection": "row",
                      "height": 64,
                      "justifyContent": "center",
                      "left": 0,
                      "paddingLeft": 10,
                      "paddingRight": 10,
                      "paddingTop": 15,
                      "right": 0,
                      "shadowColor": undefined,
                      "shadowOffset": undefined,
                      "shadowOpacity": undefined,
                      "shadowRadius": undefined,
                      "top": 0,
                    }
                  }
                  virtual={undefined}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "alignSelf": "center",
                        "flex": 1,
                      }
                    }
                    virtual={undefined}
                  >
                    <View
                      accessibilityComponentType={undefined}
                      accessibilityLabel={undefined}
                      accessibilityTraits={undefined}
                      accessible={true}
                      collapsable={undefined}
                      hasTVPreferredFocus={undefined}
                      hitSlop={undefined}
                      isTVSelectable={true}
                      nativeID={undefined}
                      onLayout={undefined}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": null,
                          "backgroundColor": "transparent",
                          "borderBottomWidth": null,
                          "borderColor": null,
                          "borderLeftWidth": null,
                          "borderRadius": 5,
                          "borderRightWidth": null,
                          "borderTopWidth": null,
                          "elevation": 0,
                          "flexDirection": "row",
                          "height": 45,
                          "justifyContent": "space-between",
                          "marginLeft": -3,
                          "opacity": 1,
                          "paddingBottom": 6,
                          "paddingLeft": 6,
                          "paddingRight": 6,
                          "paddingTop": 6,
                          "shadowColor": null,
                          "shadowOffset": null,
                          "shadowOpacity": null,
                          "shadowRadius": null,
                        }
                      }
                      testID={undefined}
                      tvParallaxProperties={undefined}
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        ellipsizeMode="tail"
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#007aff",
                            "fontFamily": "System",
                            "fontSize": 17,
                            "lineHeight": 19,
                            "marginLeft": 0,
                            "marginRight": 0,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "top": undefined,
                          }
                        }
                        uppercase={false}
                        virtual={undefined}
                      >
                        Back
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "flex": 1,
                      }
                    }
                    virtual={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "#000",
                          "fontFamily": "System",
                          "fontSize": 17,
                          "fontWeight": "600",
                          "textAlign": "center",
                        }
                      }
                      virtual={undefined}
                    >
                      Sort Order
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "flex-end",
                        "alignSelf": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      }
                    }
                    virtual={undefined}
                  />
                </View>
              </View>
              <RCTScrollView
                automaticallyAdjustContentInsets={false}
                contentContainerStyle={undefined}
                contentInset={
                  Object {
                    "bottom": 0,
                  }
                }
                enableAutoAutomaticScroll={true}
                enableResetScrollToCoords={true}
                extraHeight={75}
                extraScrollHeight={0}
                getScrollResponder={[Function]}
                handleOnScroll={[Function]}
                keyboardDismissMode="interactive"
                keyboardOpeningTime={250}
                keyboardShouldPersistTaps="handled"
                keyboardSpace={0}
                onScroll={[Function]}
                resetKeyboardSpace={[Function]}
                resetScrollToCoords={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                scrollEventThrottle={1}
                scrollForExtraHeightOnAndroid={[Function]}
                scrollToEnd={[Function]}
                scrollToFocusedInput={[Function]}
                scrollToPosition={[Function]}
                showsVerticalScrollIndicator={true}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "flex": 1,
                  }
                }
                viewIsInsideTabBar={false}
                virtual={undefined}
              >
                <View>
                  <RCTScrollView
                    data={
                      Array [
                        <Styled(Item)
                          label="Relevance"
                          value="sort:relevance"
                          virtual={undefined}
                        />,
                        <Styled(Item)
                          label="Followers (ascending)"
                          value="sort:followers-asc"
                          virtual={undefined}
                        />,
                        <Styled(Item)
                          label="Followers (descending)"
                          value="sort:followers-desc"
                          virtual={undefined}
                        />,
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    invertStickyHeaders={undefined}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    renderItem={[Function]}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessibilityComponentType={undefined}
                          accessibilityLabel={undefined}
                          accessibilityTraits={undefined}
                          accessible={true}
                          hasTVPreferredFocus={undefined}
                          hitSlop={undefined}
                          isTVSelectable={true}
                          nativeID={undefined}
                          onLayout={undefined}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={null}
                          testID={undefined}
                          tvParallaxProperties={undefined}
                        >
                          <View
                            button={true}
                            onPress={[Function]}
                            selected={true}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "transparent",
                                "borderBottomWidth": 0.5,
                                "borderColor": "#c9c9c9",
                                "flexDirection": "row",
                                "marginLeft": 16,
                                "paddingBottom": 13,
                                "paddingRight": 16,
                                "paddingTop": 13,
                              }
                            }
                            virtual={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#007aff",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                              virtual={undefined}
                            >
                              Relevance
                            </Text>
                            <View
                              style={
                                Object {
                                  "alignItems": "flex-end",
                                  "alignSelf": "center",
                                  "flex": 0.28,
                                  "paddingBottom": null,
                                  "paddingLeft": null,
                                  "paddingRight": null,
                                  "paddingTop": null,
                                }
                              }
                              virtual={undefined}
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hasTVPreferredFocus={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignSelf": null,
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              >
                                <Text
                                  accessible={true}
                                  allowFontScaling={true}
                                  ellipsizeMode="tail"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessibilityComponentType={undefined}
                          accessibilityLabel={undefined}
                          accessibilityTraits={undefined}
                          accessible={true}
                          hasTVPreferredFocus={undefined}
                          hitSlop={undefined}
                          isTVSelectable={true}
                          nativeID={undefined}
                          onLayout={undefined}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={null}
                          testID={undefined}
                          tvParallaxProperties={undefined}
                        >
                          <View
                            button={true}
                            onPress={[Function]}
                            selected={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "transparent",
                                "borderBottomWidth": 0.5,
                                "borderColor": "#c9c9c9",
                                "flexDirection": "row",
                                "marginLeft": 16,
                                "paddingBottom": 13,
                                "paddingRight": 16,
                                "paddingTop": 13,
                              }
                            }
                            virtual={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#000",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                              virtual={undefined}
                            >
                              Followers (ascending)
                            </Text>
                            <View
                              style={
                                Object {
                                  "alignItems": "flex-end",
                                  "alignSelf": "center",
                                  "flex": 0.28,
                                  "paddingBottom": null,
                                  "paddingLeft": null,
                                  "paddingRight": null,
                                  "paddingTop": null,
                                }
                              }
                              virtual={undefined}
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hasTVPreferredFocus={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignSelf": null,
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessibilityComponentType={undefined}
                          accessibilityLabel={undefined}
                          accessibilityTraits={undefined}
                          accessible={true}
                          hasTVPreferredFocus={undefined}
                          hitSlop={undefined}
                          isTVSelectable={true}
                          nativeID={undefined}
                          onLayout={undefined}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={null}
                          testID={undefined}
                          tvParallaxProperties={undefined}
                        >
                          <View
                            button={true}
                            onPress={[Function]}
                            selected={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "transparent",
                                "borderBottomWidth": 0.5,
                                "borderColor": "#c9c9c9",
                                "flexDirection": "row",
                                "marginLeft": 16,
                                "paddingBottom": 13,
                                "paddingRight": 16,
                                "paddingTop": 13,
                              }
                            }
                            virtual={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#000",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                              virtual={undefined}
                            >
                              Followers (descending)
                            </Text>
                            <View
                              style={
                                Object {
                                  "alignItems": "flex-end",
                                  "alignSelf": "center",
                                  "flex": 0.28,
                                  "paddingBottom": null,
                                  "paddingLeft": null,
                                  "paddingRight": null,
                                  "paddingTop": null,
                                }
                              }
                              virtual={undefined}
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hasTVPreferredFocus={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignSelf": null,
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </RCTScrollView>
            </View>
          </Modal>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomWidth": 0.5,
            "borderColor": "#a7a6ab",
            "elevation": 3,
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-around",
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          },
          Object {
            "backgroundColor": "#F8F8F8",
          },
          Object {},
        ]
      }
      virtual={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          active={true}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F8F8F8",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#007aff",
                "fontFamily": "System",
                "fontSize": 16,
                "fontWeight": "600",
                "marginLeft": 7,
                "marginRight": 7,
              }
            }
            uppercase={false}
            virtual={undefined}
          >
            Users
          </Text>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          active={false}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F8F8F8",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#6b6b6b",
                "fontFamily": "System",
                "fontSize": 16,
                "marginLeft": 7,
                "marginRight": 7,
              }
            }
            uppercase={false}
            virtual={undefined}
          >
            Repos
          </Text>
        </View>
      </View>
      <View
        collapsable={undefined}
        style={
          Object {
            "backgroundColor": "#007aff",
            "bottom": 0,
            "height": 4,
            "left": 0,
            "position": "absolute",
            "width": 375,
          }
        }
      />
    </View>
    <RCTScrollView
      alwaysBounceVertical={false}
      automaticallyAdjustContentInsets={false}
      contentOffset={
        Object {
          "x": 0,
        }
      }
      directionalLockEnabled={true}
      horizontal={true}
      keyboardDismissMode="on-drag"
      keyboardShouldPersistTaps="handled"
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      pagingEnabled={true}
      scrollEnabled={true}
      scrollEventThrottle={16}
      scrollsToTop={false}
      showsHorizontalScrollIndicator={false}
    >
      <View>
        <View
          style={
            Object {
              "width": 750,
            }
          }
        >
          <View
            heading="Users"
            style={
              Object {
                "backgroundColor": "#FFF",
                "flex": 1,
              }
            }
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 16,
                }
              }
              uppercase={false}
              virtual={undefined}
            >
              No matching users
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "width": 750,
            }
          }
        >
          <View
            heading="Repos"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`should pass snapshot test 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "height": 1334,
    }
  }
  virtual={undefined}
>
  <View>
    <View
      hasTabs={true}
      rounded={true}
      searchBar={true}
      style={
        Object {
          "backgroundColor": "#F8F8F8",
          "borderBottomColor": "#a7a6ab",
          "borderBottomWidth": null,
          "elevation": 0,
          "flexDirection": "row",
          "height": 64,
          "justifyContent": "center",
          "left": 0,
          "paddingLeft": 10,
          "paddingRight": 10,
          "paddingTop": 15,
          "right": 0,
          "shadowColor": null,
          "shadowOffset": null,
          "shadowOpacity": null,
          "shadowRadius": null,
          "top": 0,
        }
      }
      virtual={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#CECDD2",
            "borderBottomWidth": 1,
            "borderColor": "transparent",
            "borderLeftWidth": 0,
            "borderRadius": 25,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "flex": 1,
            "flexDirection": "row",
            "height": 30,
            "justifyContent": "flex-start",
            "marginLeft": 2,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          autoCorrect={false}
          clearButtonMode="while-editing"
          editable={true}
          onChangeText={[Function]}
          onEndEditing={[Function]}
          placeholder="Search"
          placeholderTextColor="#575757"
          style={
            Object {
              "alignSelf": "center",
              "color": "#000",
              "flex": 1,
              "fontSize": 17,
              "height": 30,
              "lineHeight": 24,
              "paddingLeft": 5,
              "paddingRight": 5,
              "top": 1.5,
            }
          }
          underlineColorAndroid="rgba(0,0,0,0)"
          virtual={undefined}
        />
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "flex-start",
                "backgroundColor": "transparent",
                "borderBottomWidth": null,
                "borderColor": "#007aff",
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "elevation": 0,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "space-between",
                "opacity": 1,
                "paddingBottom": 6,
                "paddingTop": 6,
                "shadowColor": null,
                "shadowOffset": null,
                "shadowOpacity": null,
                "shadowRadius": null,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
          <Modal
            animationType="slide"
            hardwareAccelerated={false}
            onRequestClose={[Function]}
            supportedOrientations={null}
            transparent={false}
            visible={false}
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "height": 1334,
                }
              }
              virtual={undefined}
            >
              <View>
                <View
                  style={
                    Object {
                      "backgroundColor": "#F8F8F8",
                      "borderBottomColor": "#a7a6ab",
                      "borderBottomWidth": 0.5,
                      "elevation": 3,
                      "flexDirection": "row",
                      "height": 64,
                      "justifyContent": "center",
                      "left": 0,
                      "paddingLeft": 10,
                      "paddingRight": 10,
                      "paddingTop": 15,
                      "right": 0,
                      "shadowColor": undefined,
                      "shadowOffset": undefined,
                      "shadowOpacity": undefined,
                      "shadowRadius": undefined,
                      "top": 0,
                    }
                  }
                  virtual={undefined}
                >
                  <View
                    style={
                      Object {
                        "alignItems": "flex-start",
                        "alignSelf": "center",
                        "flex": 1,
                      }
                    }
                    virtual={undefined}
                  >
                    <View
                      accessibilityComponentType={undefined}
                      accessibilityLabel={undefined}
                      accessibilityTraits={undefined}
                      accessible={true}
                      collapsable={undefined}
                      hasTVPreferredFocus={undefined}
                      hitSlop={undefined}
                      isTVSelectable={true}
                      nativeID={undefined}
                      onLayout={undefined}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": null,
                          "backgroundColor": "transparent",
                          "borderBottomWidth": null,
                          "borderColor": null,
                          "borderLeftWidth": null,
                          "borderRadius": 5,
                          "borderRightWidth": null,
                          "borderTopWidth": null,
                          "elevation": 0,
                          "flexDirection": "row",
                          "height": 45,
                          "justifyContent": "space-between",
                          "marginLeft": -3,
                          "opacity": 1,
                          "paddingBottom": 6,
                          "paddingLeft": 6,
                          "paddingRight": 6,
                          "paddingTop": 6,
                          "shadowColor": null,
                          "shadowOffset": null,
                          "shadowOpacity": null,
                          "shadowRadius": null,
                        }
                      }
                      testID={undefined}
                      tvParallaxProperties={undefined}
                    >
                      <Text
                        accessible={true}
                        allowFontScaling={true}
                        ellipsizeMode="tail"
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#007aff",
                            "fontFamily": "System",
                            "fontSize": 17,
                            "lineHeight": 19,
                            "marginLeft": 0,
                            "marginRight": 0,
                            "paddingLeft": 16,
                            "paddingRight": 16,
                            "top": undefined,
                          }
                        }
                        uppercase={false}
                        virtual={undefined}
                      >
                        Back
                      </Text>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "flex": 1,
                      }
                    }
                    virtual={undefined}
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "#000",
                          "fontFamily": "System",
                          "fontSize": 17,
                          "fontWeight": "600",
                          "textAlign": "center",
                        }
                      }
                      virtual={undefined}
                    >
                      Sort Order
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "flex-end",
                        "alignSelf": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "justifyContent": "flex-end",
                      }
                    }
                    virtual={undefined}
                  />
                </View>
              </View>
              <RCTScrollView
                automaticallyAdjustContentInsets={false}
                contentContainerStyle={undefined}
                contentInset={
                  Object {
                    "bottom": 0,
                  }
                }
                enableAutoAutomaticScroll={true}
                enableResetScrollToCoords={true}
                extraHeight={75}
                extraScrollHeight={0}
                getScrollResponder={[Function]}
                handleOnScroll={[Function]}
                keyboardDismissMode="interactive"
                keyboardOpeningTime={250}
                keyboardShouldPersistTaps="handled"
                keyboardSpace={0}
                onScroll={[Function]}
                resetKeyboardSpace={[Function]}
                resetScrollToCoords={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                scrollEventThrottle={1}
                scrollForExtraHeightOnAndroid={[Function]}
                scrollToEnd={[Function]}
                scrollToFocusedInput={[Function]}
                scrollToPosition={[Function]}
                showsVerticalScrollIndicator={true}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "flex": 1,
                  }
                }
                viewIsInsideTabBar={false}
                virtual={undefined}
              >
                <View>
                  <RCTScrollView
                    data={
                      Array [
                        <Styled(Item)
                          label="Relevance"
                          value="sort:relevance"
                          virtual={undefined}
                        />,
                        <Styled(Item)
                          label="Followers (ascending)"
                          value="sort:followers-asc"
                          virtual={undefined}
                        />,
                        <Styled(Item)
                          label="Followers (descending)"
                          value="sort:followers-desc"
                          virtual={undefined}
                        />,
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    invertStickyHeaders={undefined}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    renderItem={[Function]}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessibilityComponentType={undefined}
                          accessibilityLabel={undefined}
                          accessibilityTraits={undefined}
                          accessible={true}
                          hasTVPreferredFocus={undefined}
                          hitSlop={undefined}
                          isTVSelectable={true}
                          nativeID={undefined}
                          onLayout={undefined}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={null}
                          testID={undefined}
                          tvParallaxProperties={undefined}
                        >
                          <View
                            button={true}
                            onPress={[Function]}
                            selected={true}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "transparent",
                                "borderBottomWidth": 0.5,
                                "borderColor": "#c9c9c9",
                                "flexDirection": "row",
                                "marginLeft": 16,
                                "paddingBottom": 13,
                                "paddingRight": 16,
                                "paddingTop": 13,
                              }
                            }
                            virtual={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#007aff",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                              virtual={undefined}
                            >
                              Relevance
                            </Text>
                            <View
                              style={
                                Object {
                                  "alignItems": "flex-end",
                                  "alignSelf": "center",
                                  "flex": 0.28,
                                  "paddingBottom": null,
                                  "paddingLeft": null,
                                  "paddingRight": null,
                                  "paddingTop": null,
                                }
                              }
                              virtual={undefined}
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hasTVPreferredFocus={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignSelf": null,
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              >
                                <Text
                                  accessible={true}
                                  allowFontScaling={true}
                                  ellipsizeMode="tail"
                                />
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessibilityComponentType={undefined}
                          accessibilityLabel={undefined}
                          accessibilityTraits={undefined}
                          accessible={true}
                          hasTVPreferredFocus={undefined}
                          hitSlop={undefined}
                          isTVSelectable={true}
                          nativeID={undefined}
                          onLayout={undefined}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={null}
                          testID={undefined}
                          tvParallaxProperties={undefined}
                        >
                          <View
                            button={true}
                            onPress={[Function]}
                            selected={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "transparent",
                                "borderBottomWidth": 0.5,
                                "borderColor": "#c9c9c9",
                                "flexDirection": "row",
                                "marginLeft": 16,
                                "paddingBottom": 13,
                                "paddingRight": 16,
                                "paddingTop": 13,
                              }
                            }
                            virtual={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#000",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                              virtual={undefined}
                            >
                              Followers (ascending)
                            </Text>
                            <View
                              style={
                                Object {
                                  "alignItems": "flex-end",
                                  "alignSelf": "center",
                                  "flex": 0.28,
                                  "paddingBottom": null,
                                  "paddingLeft": null,
                                  "paddingRight": null,
                                  "paddingTop": null,
                                }
                              }
                              virtual={undefined}
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hasTVPreferredFocus={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignSelf": null,
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessibilityComponentType={undefined}
                          accessibilityLabel={undefined}
                          accessibilityTraits={undefined}
                          accessible={true}
                          hasTVPreferredFocus={undefined}
                          hitSlop={undefined}
                          isTVSelectable={true}
                          nativeID={undefined}
                          onLayout={undefined}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={null}
                          testID={undefined}
                          tvParallaxProperties={undefined}
                        >
                          <View
                            button={true}
                            onPress={[Function]}
                            selected={false}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "transparent",
                                "borderBottomWidth": 0.5,
                                "borderColor": "#c9c9c9",
                                "flexDirection": "row",
                                "marginLeft": 16,
                                "paddingBottom": 13,
                                "paddingRight": 16,
                                "paddingTop": 13,
                              }
                            }
                            virtual={undefined}
                          >
                            <Text
                              accessible={true}
                              allowFontScaling={true}
                              ellipsizeMode="tail"
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#000",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                              virtual={undefined}
                            >
                              Followers (descending)
                            </Text>
                            <View
                              style={
                                Object {
                                  "alignItems": "flex-end",
                                  "alignSelf": "center",
                                  "flex": 0.28,
                                  "paddingBottom": null,
                                  "paddingLeft": null,
                                  "paddingRight": null,
                                  "paddingTop": null,
                                }
                              }
                              virtual={undefined}
                            >
                              <View
                                accessibilityComponentType={undefined}
                                accessibilityLabel={undefined}
                                accessibilityTraits={undefined}
                                accessible={true}
                                collapsable={undefined}
                                hasTVPreferredFocus={undefined}
                                hitSlop={undefined}
                                isTVSelectable={true}
                                nativeID={undefined}
                                onLayout={undefined}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  Object {
                                    "alignSelf": null,
                                    "opacity": 1,
                                  }
                                }
                                testID={undefined}
                                tvParallaxProperties={undefined}
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </RCTScrollView>
            </View>
          </Modal>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomWidth": 0.5,
            "borderColor": "#a7a6ab",
            "elevation": 3,
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-around",
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          },
          Object {
            "backgroundColor": "#F8F8F8",
          },
          Object {},
        ]
      }
      virtual={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          active={true}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F8F8F8",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#007aff",
                "fontFamily": "System",
                "fontSize": 16,
                "fontWeight": "600",
                "marginLeft": 7,
                "marginRight": 7,
              }
            }
            uppercase={false}
            virtual={undefined}
          >
            Users
          </Text>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          active={false}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F8F8F8",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#6b6b6b",
                "fontFamily": "System",
                "fontSize": 16,
                "marginLeft": 7,
                "marginRight": 7,
              }
            }
            uppercase={false}
            virtual={undefined}
          >
            Repos
          </Text>
        </View>
      </View>
      <View
        collapsable={undefined}
        style={
          Object {
            "backgroundColor": "#007aff",
            "bottom": 0,
            "height": 4,
            "left": 0,
            "position": "absolute",
            "width": 375,
          }
        }
      />
    </View>
    <RCTScrollView
      alwaysBounceVertical={false}
      automaticallyAdjustContentInsets={false}
      contentOffset={
        Object {
          "x": 0,
        }
      }
      directionalLockEnabled={true}
      horizontal={true}
      keyboardDismissMode="on-drag"
      keyboardShouldPersistTaps="handled"
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      pagingEnabled={true}
      scrollEnabled={true}
      scrollEventThrottle={16}
      scrollsToTop={false}
      showsHorizontalScrollIndicator={false}
    >
      <View>
        <View
          style={
            Object {
              "width": 750,
            }
          }
        >
          <View
            heading="Users"
            style={
              Object {
                "backgroundColor": "#FFF",
                "flex": 1,
              }
            }
            virtual={undefined}
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "height": 1334,
                }
              }
              virtual={undefined}
            >
              <RCTScrollView
                automaticallyAdjustContentInsets={false}
                contentContainerStyle={undefined}
                contentInset={
                  Object {
                    "bottom": 0,
                  }
                }
                enableAutoAutomaticScroll={true}
                enableResetScrollToCoords={true}
                extraHeight={75}
                extraScrollHeight={0}
                getScrollResponder={[Function]}
                handleOnScroll={[Function]}
                keyboardDismissMode="interactive"
                keyboardOpeningTime={250}
                keyboardShouldPersistTaps="handled"
                keyboardSpace={0}
                onScroll={[Function]}
                resetKeyboardSpace={[Function]}
                resetScrollToCoords={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                scrollEventThrottle={1}
                scrollForExtraHeightOnAndroid={[Function]}
                scrollToEnd={[Function]}
                scrollToFocusedInput={[Function]}
                scrollToPosition={[Function]}
                showsVerticalScrollIndicator={true}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "flex": 1,
                  }
                }
                viewIsInsideTabBar={false}
                virtual={undefined}
              >
                <View>
                  <View
                    closeOnRowBeginSwipe={false}
                    closeOnRowPress={true}
                    closeOnScroll={true}
                    directionalDistanceChangeThreshold={2}
                    disableLeftSwipe={false}
                    disableRightSwipe={false}
                    leftOpenValue={0}
                    previewFirstRow={false}
                    recalculateHiddenLayout={false}
                    rightOpenValue={0}
                    style={Object {}}
                    swipeToOpenPercent={50}
                    virtual={undefined}
                  />
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "width": 750,
            }
          }
        >
          <View
            heading="Repos"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
